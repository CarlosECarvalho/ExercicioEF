// <auto-generated />
using System;
using Ecommerce.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Api.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    [Migration("20240219040403_MudancaAnnotation")]
    partial class MudancaAnnotation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DepartamentoUsuario", b =>
                {
                    b.Property<int>("DepartamentosId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("DepartamentosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("DepartamentoUsuario");
                });

            modelBuilder.Entity("Ecommerce.models.Contato", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("Ecommerce.models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Vendas"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Compras"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Logistica"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "TI"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "RH"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Produção"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Financeiro"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Marketing"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Juridico"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Qualidade"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Manutenção"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Segurança"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Engenharia"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Administração"
                        });
                });

            modelBuilder.Entity("Ecommerce.models.EnderecoEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEndereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioID");

                    b.ToTable("EnderecosEntrega");
                });

            modelBuilder.Entity("Ecommerce.models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("SupervidorId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Ecommerce.models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Matricula"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CIN");

                    b.Property<string>("SituacaoCadastro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasFilter("[UsuarioId] IS NOT NULL");

                    b.HasIndex("Nome", "CPF");

                    b.HasIndex(new[] { "Email" }, "IX_EMAIL_UNICO")
                        .IsUnique();

                    b.ToTable("TB_USUARIOS");
                });

            modelBuilder.Entity("DepartamentoUsuario", b =>
                {
                    b.HasOne("Ecommerce.models.Departamento", null)
                        .WithMany()
                        .HasForeignKey("DepartamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce.models.EnderecoEntrega", b =>
                {
                    b.HasOne("Ecommerce.models.Usuario", "Usuario")
                        .WithMany("EnderecosEntregas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.models.Pedido", b =>
                {
                    b.HasOne("Ecommerce.models.Usuario", "Cliente")
                        .WithMany("PedidosCliente")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.models.Usuario", "Colaborador")
                        .WithMany("PedidosColaborador")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.models.Usuario", "Supervisor")
                        .WithMany("PedidosSupervisor")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Cliente");

                    b.Navigation("Colaborador");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Ecommerce.models.Usuario", b =>
                {
                    b.HasOne("Ecommerce.models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("Ecommerce.models.Usuario", "UsuarioId");

                    b.Navigation("Contato");
                });

            modelBuilder.Entity("Ecommerce.models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.models.Usuario", b =>
                {
                    b.Navigation("EnderecosEntregas");

                    b.Navigation("PedidosCliente");

                    b.Navigation("PedidosColaborador");

                    b.Navigation("PedidosSupervisor");
                });
#pragma warning restore 612, 618
        }
    }
}
